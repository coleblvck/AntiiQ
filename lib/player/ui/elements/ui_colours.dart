import 'package:antiiq/player/global_variables.dart';
import 'package:flutter/material.dart';

class AntiiQColorScheme {
  const AntiiQColorScheme({
    required this.primary,
    required this.onPrimary,
    required this.secondary,
    required this.onSecondary,
    required this.background,
    required this.onBackground,
    required this.error,
    required this.onError,
    required this.surface,
    required this.onSurface,
    required this.brightness,
    required this.colorSchemeType,
  });
  final Color primary;
  final Color onPrimary;
  final Color secondary;
  final Color onSecondary;
  final Color background;
  final Color onBackground;
  final Color error;
  final Color onError;
  final Color surface;
  final Color onSurface;
  final Brightness brightness;
  final ColorSchemeType colorSchemeType;
}

Map<String, AntiiQColorScheme> customThemes = {
  "AntiiQ": const AntiiQColorScheme(
    primary: Color.fromARGB(255, 217, 180, 131),
    onPrimary: Color.fromARGB(244, 36, 36, 36),
    secondary: Color.fromARGB(255, 139, 167, 133),
    onSecondary: Color.fromARGB(244, 12, 12, 12),
    background: Color.fromARGB(255, 12, 12, 12),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 52, 70, 61),
    onSurface: Color.fromARGB(255, 255, 255, 255),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Paragraph": const AntiiQColorScheme(
    primary: Color.fromARGB(255, 255, 193, 7),
    onPrimary: Color.fromARGB(255, 0, 0, 0),
    secondary: Color.fromARGB(255, 0, 150, 136),
    onSecondary: Color.fromARGB(255, 255, 255, 255),
    background: Color.fromARGB(255, 12, 12, 12),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 31, 77, 70),
    onSurface: Color.fromARGB(255, 230, 230, 230),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Chaos": const AntiiQColorScheme(
    primary: Colors.deepOrange,
    onPrimary: Color.fromARGB(255, 0, 0, 0),
    secondary: Colors.amber,
    onSecondary: Color.fromARGB(255, 0, 0, 0),
    background: Color.fromARGB(255, 12, 12, 12),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 66, 43, 0),
    onSurface: Color.fromARGB(255, 247, 223, 223),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Candy": const AntiiQColorScheme(
    primary: Colors.yellow,
    onPrimary: Color.fromARGB(255, 0, 0, 0),
    secondary: Colors.green,
    onSecondary: Color.fromARGB(255, 0, 0, 0),
    background: Color.fromARGB(255, 0, 0, 0),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 42, 51, 30),
    onSurface: Color.fromARGB(255, 253, 255, 223),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Ambush": const AntiiQColorScheme(
    primary: Color.fromARGB(255, 228, 141, 44),
    onPrimary: Color.fromARGB(255, 0, 0, 0),
    secondary: Color.fromARGB(255, 129, 184, 142),
    onSecondary: Color.fromARGB(255, 0, 0, 0),
    background: Color.fromARGB(255, 0, 0, 0),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 35, 43, 34),
    onSurface: Color.fromARGB(255, 230, 230, 230),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Just Brown": const AntiiQColorScheme(
    primary: Colors.brown,
    onPrimary: Color.fromARGB(255, 255, 255, 255),
    secondary: Color.fromARGB(255, 185, 166, 114),
    onSecondary: Color.fromARGB(255, 255, 255, 255),
    background: Color.fromARGB(255, 0, 0, 0),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 38, 27, 5),
    onSurface: Color.fromARGB(255, 230, 230, 230),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Greenish Brown": const AntiiQColorScheme(
    primary: Colors.brown,
    onPrimary: Color.fromARGB(255, 255, 255, 255),
    secondary: Color.fromARGB(255, 185, 166, 114),
    onSecondary: Color.fromARGB(255, 255, 255, 255),
    background: Color.fromARGB(255, 0, 0, 0),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 35, 43, 34),
    onSurface: Color.fromARGB(255, 230, 230, 230),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Milky Grey": const AntiiQColorScheme(
    primary: Color.fromARGB(255, 230, 223, 170),
    onPrimary: Color.fromARGB(255, 0, 0, 0),
    secondary: Color.fromARGB(255, 174, 165, 125),
    onSecondary: Color.fromARGB(255, 0, 0, 0),
    background: Color.fromARGB(255, 28, 30, 29),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 72, 73, 71),
    onSurface: Color.fromARGB(255, 255, 255, 255),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Abstract": const AntiiQColorScheme(
    primary: Color.fromARGB(255, 241, 229, 185),
    onPrimary: Color.fromARGB(255, 0, 0, 0),
    secondary: Color.fromARGB(255, 167, 190, 153),
    onSecondary: Color.fromARGB(255, 0, 0, 0),
    background: Color.fromARGB(255, 56, 63, 62),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 47, 40, 49),
    onSurface: Color.fromARGB(255, 255, 255, 255),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Olive": const AntiiQColorScheme(
    primary: Color.fromARGB(255, 230, 223, 170),
    onPrimary: Color.fromARGB(255, 0, 0, 0),
    secondary: Color.fromARGB(255, 167, 190, 153),
    onSecondary: Color.fromARGB(255, 0, 0, 0),
    background: Color.fromARGB(255, 55, 66, 57),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 64, 87, 74),
    onSurface: Color.fromARGB(255, 255, 255, 255),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Olive Black": const AntiiQColorScheme(
    primary: Color.fromARGB(255, 230, 223, 170),
    onPrimary: Color.fromARGB(255, 0, 0, 0),
    secondary: Color.fromARGB(255, 167, 190, 153),
    onSecondary: Color.fromARGB(255, 0, 0, 0),
    background: Color.fromARGB(255, 0, 0, 0),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 64, 87, 74),
    onSurface: Color.fromARGB(255, 255, 255, 255),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Olive Blacker": const AntiiQColorScheme(
    primary: Color.fromARGB(255, 230, 223, 170),
    onPrimary: Color.fromARGB(255, 0, 0, 0),
    secondary: Color.fromARGB(255, 167, 190, 153),
    onSecondary: Color.fromARGB(255, 0, 0, 0),
    background: Color.fromARGB(255, 0, 0, 0),
    onBackground: Color.fromARGB(255, 255, 255, 255),
    surface: Color.fromARGB(255, 0, 0, 0),
    onSurface: Color.fromARGB(255, 255, 255, 255),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Fruity Purple": const AntiiQColorScheme(
    primary: Color.fromARGB(255, 204, 203, 118),
    onPrimary: Color.fromARGB(255, 0, 0, 0),
    secondary: Color.fromARGB(255, 161, 109, 147),
    onSecondary: Color.fromARGB(255, 255, 255, 255),
    background: Color.fromARGB(255, 0, 0, 0),
    onBackground: Color.fromARGB(255, 204, 203, 118),
    surface: Color.fromARGB(255, 93, 35, 80),
    onSurface: Color.fromARGB(255, 255, 255, 255),
    error: Color.fromARGB(255, 248, 113, 113),
    onError: Color.fromARGB(255, 0, 0, 0),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Industrial Rust": const AntiiQColorScheme(
    primary: Color(0xFFE8815C),
    onPrimary: Color(0xFF0A0A0A),
    secondary: Color(0xFF4A5759),
    onSecondary: Color(0xFFFFFFFF),
    background: Color(0xFF1A1512),
    onBackground: Color(0xFFE8E3DB),
    surface: Color(0xFF3D2820),
    onSurface: Color(0xFFE8E3DB),
    error: Color(0xFFF80000),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Concrete Brutalism": const AntiiQColorScheme(
    primary: Color(0xFFF4F1E8),
    onPrimary: Color(0xFF1C1C1C),
    secondary: Color(0xFF8C8C8C),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF2B2B2B),
    onBackground: Color(0xFFE8E8E8),
    surface: Color(0xFF3F3F3F),
    onSurface: Color(0xFFE8E8E8),
    error: Color(0xFFCC3333),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Radioactive": const AntiiQColorScheme(
    primary: Color(0xFFCCFF00),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFFF006E),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF000000),
    onBackground: Color(0xFFCCFF00),
    surface: Color(0xFF1A2E00),
    onSurface: Color(0xFFCCFF00),
    error: Color(0xFFFF006E),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Blueprint": const AntiiQColorScheme(
    primary: Color(0xFFFFFFFF),
    onPrimary: Color(0xFF003D82),
    secondary: Color(0xFF00D9FF),
    onSecondary: Color(0xFF003D82),
    background: Color(0xFF003D82),
    onBackground: Color(0xFFFFFFFF),
    surface: Color(0xFF00578C),
    onSurface: Color(0xFFFFFFFF),
    error: Color(0xFFFF3366),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Terminal Green": const AntiiQColorScheme(
    primary: Color(0xFF33FF33),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFF00FF88),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF000000),
    onBackground: Color(0xFF33FF33),
    surface: Color(0xFF001A00),
    onSurface: Color(0xFF33FF33),
    error: Color(0xFFFF3333),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Hazard Tape": const AntiiQColorScheme(
    primary: Color(0xFFFFD700),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFFFFFFF),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF000000),
    onBackground: Color(0xFFFFD700),
    surface: Color(0xFF332600),
    onSurface: Color(0xFFFFD700),
    error: Color(0xFFFF0000),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Midnight Neon": const AntiiQColorScheme(
    primary: Color(0xFFFF10F0),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFF00F0FF),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF050014),
    onBackground: Color(0xFFFF10F0),
    surface: Color(0xFF1A0033),
    onSurface: Color(0xFFFF10F0),
    error: Color(0xFFFF0055),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Forge": const AntiiQColorScheme(
    primary: Color(0xFFFF4500),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFFFB347),
    onSecondary: Color(0xFF1A0A00),
    background: Color(0xFF0D0D0D),
    onBackground: Color(0xFFFFB347),
    surface: Color(0xFF331100),
    onSurface: Color(0xFFFFB347),
    error: Color(0xFFFF0000),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Soviet Red": const AntiiQColorScheme(
    primary: Color(0xFFDA1E28),
    onPrimary: Color(0xFFFFFFFF),
    secondary: Color(0xFFF1C21B),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF161616),
    onBackground: Color(0xFFF4F4F4),
    surface: Color(0xFF3D0A0A),
    onSurface: Color(0xFFFFD7D9),
    error: Color(0xFFDA1E28),
    onError: Color(0xFFFFFFFF),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Caution Orange": const AntiiQColorScheme(
    primary: Color(0xFFFF6B00),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFFFFFFF),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF000000),
    onBackground: Color(0xFFFFFFFF),
    surface: Color(0xFF331500),
    onSurface: Color(0xFFFFCCAA),
    error: Color(0xFFFF0000),
    onError: Color(0xFFFFFFFF),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Deep Ocean": const AntiiQColorScheme(
    primary: Color(0xFF00D4FF),
    onPrimary: Color(0xFF001A1F),
    secondary: Color(0xFF0099CC),
    onSecondary: Color(0xFFFFFFFF),
    background: Color(0xFF001A1F),
    onBackground: Color(0xFF9FE7FF),
    surface: Color(0xFF003D4D),
    onSurface: Color(0xFF9FE7FF),
    error: Color(0xFFFF4757),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Voltage": const AntiiQColorScheme(
    primary: Color(0xFFFFFF00),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFF00FFFF),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF000000),
    onBackground: Color(0xFFFFFF00),
    surface: Color(0xFF1A1A00),
    onSurface: Color(0xFFFFFF99),
    error: Color(0xFFFF00FF),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Graphite": const AntiiQColorScheme(
    primary: Color(0xFFE0E0E0),
    onPrimary: Color(0xFF1C1C1C),
    secondary: Color(0xFF4A90E2),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF1C1C1C),
    onBackground: Color(0xFFE0E0E0),
    surface: Color(0xFF3C3C3C),
    onSurface: Color(0xFFE0E0E0),
    error: Color(0xFFE24A4A),
    onError: Color(0xFF1C1C1C),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Toxic Waste": const AntiiQColorScheme(
    primary: Color(0xFFBFFF00),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFFF00AA),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF0A0A0A),
    onBackground: Color(0xFFBFFF00),
    surface: Color(0xFF1A2600),
    onSurface: Color(0xFFDDFF99),
    error: Color(0xFFFF00AA),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Cyberpunk": const AntiiQColorScheme(
    primary: Color(0xFFFF2A6D),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFF00FFF7),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF0D0221),
    onBackground: Color(0xFFFF2A6D),
    surface: Color(0xFF230338),
    onSurface: Color(0xFFFF99C2),
    error: Color(0xFFFF0055),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Arctic": const AntiiQColorScheme(
    primary: Color(0xFF00E5FF),
    onPrimary: Color(0xFF001F24),
    secondary: Color(0xFFFFFFFF),
    onSecondary: Color(0xFF001F24),
    background: Color(0xFF001F24),
    onBackground: Color(0xFFCCF7FF),
    surface: Color(0xFF003D47),
    onSurface: Color(0xFFCCF7FF),
    error: Color(0xFFFF3366),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Ember": const AntiiQColorScheme(
    primary: Color(0xFFFF5722),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFFFCA28),
    onSecondary: Color(0xFF1A1300),
    background: Color(0xFF0D0D0D),
    onBackground: Color(0xFFFFDDB3),
    surface: Color(0xFF331100),
    onSurface: Color(0xFFFFDDB3),
    error: Color(0xFFFF1744),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Stealth": const AntiiQColorScheme(
    primary: Color(0xFF7FFF00),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFF00FF00),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF000000),
    onBackground: Color(0xFF7FFF00),
    surface: Color(0xFF0D1F00),
    onSurface: Color(0xFFB3FF66),
    error: Color(0xFFFF3333),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Laser Red": const AntiiQColorScheme(
    primary: Color(0xFFFF0033),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFFFFFFF),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF000000),
    onBackground: Color(0xFFFF0033),
    surface: Color(0xFF330008),
    onSurface: Color(0xFFFFCCDD),
    error: Color(0xFFFF0033),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Glitch Matrix": const AntiiQColorScheme(
    primary: Color(0xFF00FF41),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFFF0080),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF000000),
    onBackground: Color(0xFF00FF41),
    surface: Color(0xFF001A0A),
    onSurface: Color(0xFF00FF41),
    error: Color(0xFFFF0080),
    onError: Color(0xFFFFFFFF),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Void Purple": const AntiiQColorScheme(
    primary: Color(0xFFBB86FC),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFF03DAC6),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF0A0014),
    onBackground: Color(0xFFBB86FC),
    surface: Color(0xFF1F1129),
    onSurface: Color(0xFFBB86FC),
    error: Color(0xFFCF6679),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Rust Belt": const AntiiQColorScheme(
    primary: Color(0xFFD95D39),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFF0EDEE),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF0D0806),
    onBackground: Color(0xFFF0EDEE),
    surface: Color(0xFF2A1810),
    onSurface: Color(0xFFF0EDEE),
    error: Color(0xFFD95D39),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Synthwave Sunset": const AntiiQColorScheme(
    primary: Color(0xFFFF6C11),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFFF0099),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF0F0326),
    onBackground: Color(0xFFFF6C11),
    surface: Color(0xFF2B0A3D),
    onSurface: Color(0xFFFF6C11),
    error: Color(0xFFFF0099),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Noir Gold": const AntiiQColorScheme(
    primary: Color(0xFFD4AF37),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFEEEEEE),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF0A0A0A),
    onBackground: Color(0xFFEEEEEE),
    surface: Color(0xFF1C1C1C),
    onSurface: Color(0xFFD4AF37),
    error: Color(0xFFCC0000),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Chartreuse Shock": const AntiiQColorScheme(
    primary: Color(0xFFDFFF00),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFF7FFF00),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF000000),
    onBackground: Color(0xFFDFFF00),
    surface: Color(0xFF1F2600),
    onSurface: Color(0xFFEFFF99),
    error: Color(0xFFFF006E),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Blueberry Milk": const AntiiQColorScheme(
    primary: Color(0xFF7B68EE),
    onPrimary: Color(0xFFFFFFFF),
    secondary: Color(0xFFFFB5E8),
    onSecondary: Color(0xFF1A0033),
    background: Color(0xFF1A0033),
    onBackground: Color(0xFFE6D5FF),
    surface: Color(0xFF3D1F5C),
    onSurface: Color(0xFFFFE6F7),
    error: Color(0xFFFF6B9D),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Liquid Nitrogen": const AntiiQColorScheme(
    primary: Color(0xFFB3E5FC),
    onPrimary: Color(0xFF001F29),
    secondary: Color(0xFF4DD0E1),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF001F29),
    onBackground: Color(0xFFE1F5FE),
    surface: Color(0xFF004D61),
    onSurface: Color(0xFFE1F5FE),
    error: Color(0xFFFF5252),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Hot Magenta": const AntiiQColorScheme(
    primary: Color(0xFFFF1493),
    onPrimary: Color(0xFFFFFFFF),
    secondary: Color(0xFFFF69B4),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF0D0D0D),
    onBackground: Color(0xFFFFCCE5),
    surface: Color(0xFF330022),
    onSurface: Color(0xFFFFCCE5),
    error: Color(0xFFFF0055),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Mint Condition": const AntiiQColorScheme(
    primary: Color(0xFF3EB489),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFF98FF98),
    onSecondary: Color(0xFF001A0D),
    background: Color(0xFF001A0D),
    onBackground: Color(0xFFD4FFEA),
    surface: Color(0xFF003D26),
    onSurface: Color(0xFFD4FFEA),
    error: Color(0xFFFF6B6B),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Sunset Coral": const AntiiQColorScheme(
    primary: Color(0xFFFF7F50),
    onPrimary: Color(0xFF1A0A00),
    secondary: Color(0xFFFFD700),
    onSecondary: Color(0xFF1A1300),
    background: Color(0xFF1A0F0A),
    onBackground: Color(0xFFFFE4B5),
    surface: Color(0xFF4D2600),
    onSurface: Color(0xFFFFE4B5),
    error: Color(0xFFDC143C),
    onError: Color(0xFFFFFFFF),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Electric Teal": const AntiiQColorScheme(
    primary: Color(0xFF00CED1),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFF40E0D0),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF0A1414),
    onBackground: Color(0xFFAFEEEE),
    surface: Color(0xFF003D3D),
    onSurface: Color(0xFFE0FFFF),
    error: Color(0xFFFF4500),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Lavender Haze": const AntiiQColorScheme(
    primary: Color(0xFFE6E6FA),
    onPrimary: Color(0xFF1A0033),
    secondary: Color(0xFFDDA0DD),
    onSecondary: Color(0xFF1A001A),
    background: Color(0xFF1A001A),
    onBackground: Color(0xFFF8F4FF),
    surface: Color(0xFF4D2B52),
    onSurface: Color(0xFFF8F4FF),
    error: Color(0xFFDA70D6),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Honey Glow": const AntiiQColorScheme(
    primary: Color(0xFFFFBF00),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFFFFD700),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF1A1200),
    onBackground: Color(0xFFFFECB3),
    surface: Color(0xFF4D3800),
    onSurface: Color(0xFFFFECB3),
    error: Color(0xFFFF6347),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Cobalt Blue": const AntiiQColorScheme(
    primary: Color(0xFF0047AB),
    onPrimary: Color(0xFFFFFFFF),
    secondary: Color(0xFF4169E1),
    onSecondary: Color(0xFFFFFFFF),
    background: Color(0xFF000A1A),
    onBackground: Color(0xFFCCDDFF),
    surface: Color(0xFF001F4D),
    onSurface: Color(0xFFE6F0FF),
    error: Color(0xFFFF4444),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Peacock": const AntiiQColorScheme(
    primary: Color(0xFF1BA098),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFF6A4C93),
    onSecondary: Color(0xFFFFFFFF),
    background: Color(0xFF0D1A1A),
    onBackground: Color(0xFFB8E6E1),
    surface: Color(0xFF1F3D52),
    onSurface: Color(0xFFD5F4F1),
    error: Color(0xFFE94B3C),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Raspberry Frost": const AntiiQColorScheme(
    primary: Color(0xFFE30B5C),
    onPrimary: Color(0xFFFFFFFF),
    secondary: Color(0xFFADD8E6),
    onSecondary: Color(0xFF001A29),
    background: Color(0xFF0A0014),
    onBackground: Color(0xFFFFE0ED),
    surface: Color(0xFF330022),
    onSurface: Color(0xFFFFE0ED),
    error: Color(0xFFFF1744),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Jade Garden": const AntiiQColorScheme(
    primary: Color(0xFF00A86B),
    onPrimary: Color(0xFF000000),
    secondary: Color(0xFF50C878),
    onSecondary: Color(0xFF000000),
    background: Color(0xFF001A0F),
    onBackground: Color(0xFFB3FFD9),
    surface: Color(0xFF003D26),
    onSurface: Color(0xFFCCFFE6),
    error: Color(0xFFDC143C),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Bubblegum": const AntiiQColorScheme(
    primary: Color(0xFFFC89AC),
    onPrimary: Color(0xFF1A0008),
    secondary: Color(0xFFFFD1DC),
    onSecondary: Color(0xFF330014),
    background: Color(0xFF1A0008),
    onBackground: Color(0xFFFFE6ED),
    surface: Color(0xFF4D0026),
    onSurface: Color(0xFFFFE6ED),
    error: Color(0xFFFF0066),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
  "Saffron Spice": const AntiiQColorScheme(
    primary: Color(0xFFF4C430),
    onPrimary: Color(0xFF1A1300),
    secondary: Color(0xFFE97451),
    onSecondary: Color(0xFF1A0A00),
    background: Color(0xFF1A0F00),
    onBackground: Color(0xFFFFEDB3),
    surface: Color(0xFF4D2400),
    onSurface: Color(0xFFFFE4B3),
    error: Color(0xFFD2691E),
    onError: Color(0xFF000000),
    brightness: Brightness.dark,
    colorSchemeType: ColorSchemeType.antiiq,
  ),
};

AntiiQColorScheme currentColorScheme = getColorScheme();

AntiiQColorScheme getColorScheme() {
  return !dynamicThemeEnabled
      ? currentColorSchemeType == ColorSchemeType.antiiq
          ? customThemes[currentTheme]!
          : customColorScheme!
      : dynamicColorScheme ?? customThemes[currentTheme]!;
}

AntiiQColorScheme? customColorScheme;
